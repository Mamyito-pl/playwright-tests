name: Prod Performance Tests

on:
  workflow_dispatch:
    inputs:
      ALLURE_JOB_RUN_ID:
        description: Performance Tests PROD
      ALLURE_USERNAME:
        description:
        required: false
  schedule:
    - cron: "0 7,12 * * *"

env:
  ALLURE_TOKEN: ${{ secrets.ALLURE_TOKEN }}
  ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}
  ALLURE_ENDPOINT: https://mamyito.testops.cloud/
  ALLURE_PROJECT_ID: 1
  ALLURE_RESULTS: "allure-results"
  ALLURE_LAUNCH_NAME: "Performance Tests PROD"
  GITHUB_TOKEN: ${{ secrets.ALLURE_GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    env:
      URL: ${{ secrets.PROD_URL_SECRET }}
      APIURL: ${{ secrets.PROD_APIURL_SECRET }}
      EMAIL: ${{ secrets.EMAIL_SECRET }}
      PASSWORD: ${{ secrets.PASSWORD_SECRET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: feature/performance-tests
          token: ${{ secrets.ALLURE_GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps firefox

      - name: Install dependencies for playwright and allure framework integration
        run: |
          npm install -D allure-playwright

      - name: install and configure allurectl using GH Action
        uses: allure-framework/setup-allurectl@v1

      - name: Run Playwright tests for Web Chrome with Allure
        run: allurectl watch -- npx playwright test tests/performance-tests/performance-tests.test.spec.ts --max-failures=0 --project="Performance"
        env:
          CI: 'true'

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: allure-results
          path: allure-results/
          retention-days: 1

      - name: Generate allure report
        run: npx allure generate allure-results --clean

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push CSV results
        env:
          GITHUB_TOKEN: ${{ secrets.ALLURE_GITHUB_TOKEN }}
        run: |
          git add tests/performance-tests/pageSpeedResults.csv
          if ! git diff --cached --quiet; then
            git commit -m "Aktualizacja wyników testów wydajności"
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
            git push origin feature/performance-tests
          else
            echo "Brak zmian w pliku CSV do commitowania"
          fi
